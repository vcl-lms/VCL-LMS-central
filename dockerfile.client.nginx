# Stage 1: Build Next.js app
FROM node:alpine as builder

# Set the working directory in the container
WORKDIR /app

# Copy package.json and package-lock.json to the working directory
COPY client/package*.json ./

# Install dependencies
RUN npm install

# Copy the remaining application code to the working directory
COPY ./client .

# Build the Next.js application
RUN npm run build

# Stage 2: Use Nginx for production
FROM nginx:alpine

WORKDIR /usr/share/nginx/html
RUN rm -rf ./*

# Copy the built app from the builder stage
COPY --from=builder /app/.next .

# Copy custom Nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy the entrypoint script
# COPY docker-entrypoint.sh /docker-entrypoint.sh

# Set execute permissions for the entrypoint script
# RUN chmod +x /docker-entrypoint.sh

# Set the entrypoint script as the entry point
# ENTRYPOINT ["/docker-entrypoint.sh"]

ENTRYPOINT ["nginx", "-g", "daemon off;"]
# Expose port 80
EXPOSE 80

# Command to run the web server
# CMD ["nginx", "-g", "daemon off;"]
